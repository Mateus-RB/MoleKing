    // py::class_<G16LOGfile>(m, "G16LOGfile", "This class extract significant properties from Gaussian 16 .log or .out output files.")
    //     .def(py::init< string, bool>(), py::arg("filePath"), py::arg("polarAsw") = 0)
    //     .def("scfEnergy", &G16LOGfile::scfEnergy)
    //     .def("getMolecule", &G16LOGfile::getMolecule)
    //     .def("getDipole", (double (G16LOGfile::*)(string)) &G16LOGfile::getDipole)
    //     .def("getAlpha", (double (G16LOGfile::*)(string, string)) &G16LOGfile::getAlpha)
    //     .def("getBeta", (double (G16LOGfile::*)(string, string)) &G16LOGfile::getBeta)
    //     .def("getGamma", (double (G16LOGfile::*)(string, string)) &G16LOGfile::getGamma)
    //     .def("getOscillatorForce", (double (G16LOGfile::*)(int)) &G16LOGfile::getOscillatorForce)
    //     .def("getWavelength", (double (G16LOGfile::*)(int)) &G16LOGfile::getWavelength)
    //     .def("getOscillatorForces", (vector <double> (G16LOGfile::*)()) &G16LOGfile::getOscillatorForces)
    //     .def("getWavelengths", (vector <double> (G16LOGfile::*)()) &G16LOGfile::getWavelengths)
    //     .def("getSymmetries", (vector <string> (G16LOGfile::*)()) &G16LOGfile::getSymmetries)
    //     .def("getSymmetry", (string (G16LOGfile::*)(int)) &G16LOGfile::getSymmetry)
    //     .def("getTransitions", &G16LOGfile::getTransitions)
    //     .def("getTransitionsStr", &G16LOGfile::getTransitionsStr)
    //     .def("getTransContributions", &G16LOGfile::getTransContributions)
    //     .def("getGradient", &G16LOGfile::getGradient)
    //     .def("__str__", &G16LOGfile::toStr);

    // py::class_<G16FCHKfile>(m, "G16FCHKfile", "This class extract significant properties from Gaussian 16 .fchk output file.")
    //     .def(py::init< string>(), py::arg("filePath"))
    //     .def("getCartesianGradient", (Matrix (G16FCHKfile::*)()) &G16FCHKfile::getCartesianGradient)
    //     .def("getMolecule", &G16FCHKfile::getMolecule);